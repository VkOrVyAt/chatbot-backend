from fastapi import FastAPI, Request
from contextlib import asynccontextmanager
import logging

from app.core.utils.rate_limiter import limiter
from slowapi import _rate_limit_exceeded_handler
from slowapi.errors import RateLimitExceeded
from app.routers.auth import router as auth_router
from app.routers.me import router as me_router
from app.core.config import setup_logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ lifespan-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
@asynccontextmanager
async def lifespan(app: FastAPI):
    """
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FastAPI.
    
    - –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ: –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É.
    - –ü—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ—á–∏—Å—Ç–∫—É.
    """
    logger = logging.getLogger(__name__)
    logger.info("Starting ChatBot API")
    
    yield  # –ó–¥–µ—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    
    logger.info("Shutting down ChatBot API")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="ChatBot API",
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc",
    lifespan=lifespan
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–ª–æ–≥–∏ –≤ logs/app.log –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
setup_logging()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏–º–∏—Ç–µ—Ä–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.state.limiter = limiter
app.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(auth_router)
app.include_router(me_router)

@app.get("/")
@limiter.limit("10/minute")
async def root(request: Request):
    """
    –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API.
    """
    return {"message": "API is up and running üöÄ"}